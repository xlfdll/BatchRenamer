<Window x:Class="BatchRenamer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BatchRenamer"
        xmlns:xdwpf="clr-namespace:Xlfdll.Windows.Presentation"
        mc:Ignorable="d"
        Title="Batch Renamer"
        Width="1280" Height="720" MinWidth="360" MinHeight="240" WindowStartupLocation="CenterScreen"
        AllowDrop="True" PreviewDragOver="MainWindow_PreviewDragOver" Drop="MainWindow_Drop"
        Loaded="MainWindow_Loaded" Closing="MainWindow_Closing">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <ToolBar Grid.Row="0" ToolBarTray.IsLocked="True"
                 DataContext="{Binding Path=ToolBarViewModel}">
            <ToolBar.Style>
                <Style TargetType="ToolBar" BasedOn="{StaticResource ModernToolBarStyle}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=MainViewModel.IsBusy}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ToolBar.Style>

            <Separator/>
            <Button Command="{Binding Path=AddFileCommand}">
                <StackPanel>
                    <Image Source="{StaticResource AddFileIcon}"/>
                    <AccessText Text="Add _Files"/>
                </StackPanel>
            </Button>
            <Button Command="{Binding Path=AddFolderCommand}">
                <StackPanel>
                    <Image Source="{StaticResource AddFolderIcon}"/>
                    <AccessText Text="Add Fol_der"/>
                </StackPanel>
            </Button>
            <Separator/>
            <Button ContextMenuService.IsEnabled="False" Click="ApplyPatternButton_Click">
                <Button.Style>
                    <Style TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=MainViewModel.Files.Count}" Value="0">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="_Find and Replace..."
                                  Command="{Binding Path=OpenPatternCommand}"
                                  CommandParameter="FindAndReplace">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource FindAndReplaceIcon}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="_Insert Text..."
                                  Command="{Binding Path=OpenPatternCommand}"
                                  CommandParameter="InsertText">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource TextInsertIcon}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="_Numberize..."
                                  Command="{Binding Path=OpenPatternCommand}"
                                  CommandParameter="Numberize">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource NumberIcon}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="_Web Match..."
                                  Command="{Binding Path=OpenPatternCommand}"
                                  CommandParameter="WebMatch">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource WebMatchIcon}"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </Button.ContextMenu>

                <StackPanel>
                    <Image Source="{StaticResource ApplyPatternIcon}"/>
                    <AccessText Text="Apply _Pattern >"/>
                </StackPanel>
            </Button>
            <Button Command="{Binding Path=BatchRenameCommand}">
                <Button.Style>
                    <Style TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=MainViewModel.Files.Count}" Value="0">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>

                <StackPanel>
                    <Image Source="{StaticResource BatchRenameIcon}"/>
                    <AccessText Text="Batch _Rename"/>
                </StackPanel>
            </Button>
            <Separator/>
            <Button Command="{Binding Path=AboutCommand}">
                <StackPanel>
                    <Image Source="{StaticResource AboutIcon}"/>
                    <AccessText Text="_About"/>
                </StackPanel>
            </Button>
            <Separator/>
        </ToolBar>

        <Grid Grid.Row="1">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <ListView x:Name="BatchFileListView" Grid.Column="0"
                      ItemsSource="{Binding Path=CollectionViewSource.View}"
                      SelectionChanged="BatchFileListView_SelectionChanged"
                      SizeChanged="BatchFileListView_SizeChanged"
                      KeyDown="BatchFileListView_KeyDown"
                      GridViewColumnHeader.Click="BatchFileListViewColumnHeader_Click">
                <ListView.GroupStyle>
                    <GroupStyle HidesIfEmpty="True">
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="GroupItem">
                                <Setter Property="Template" Value="{StaticResource ListViewGroupItemExpanderControlTemplate}"/>
                            </Style>
                        </GroupStyle.ContainerStyle>
                    </GroupStyle>
                </ListView.GroupStyle>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsModified}" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Background" Value="Red"/>
                            </DataTrigger>
                        </Style.Triggers>

                        <Setter Property="IsSelected" Value="{Binding Path=IsSelected}"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>

                        <!-- Need to refer Command outside item object -->
                        <Setter Property="xdwpf:DoubleClickBehavior.Command"
                                Value="{Binding Path=DataContext.ContextMenuViewModel.OpenCommand, ElementName=BatchFileListView}"/>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="New File Name">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox x:Name="NewFileNameTextBox"
                                             Text="{Binding Path=NewFileName, UpdateSourceTrigger=PropertyChanged}"
                                             GotFocus="NewFileNameTextBox_GotFocus"
                                             PreviewKeyDown="NewFileNameTextBox_PreviewKeyDown"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Original File Name" DisplayMemberBinding="{Binding Path=OriginalFileName}"/>
                        <GridViewColumn Header="Extension" DisplayMemberBinding="{Binding Path=Extension}"/>
                        <GridViewColumn Header="Size" DisplayMemberBinding="{Binding Path=Size, Converter={local:FileSizeValueConverter}}"/>
                    </GridView>
                </ListView.View>
                <ListView.ContextMenu>
                    <!-- ContextMenu class is not part of the WPF visual tree -->
                    <!-- See https://www.codeproject.com/Articles/162784/WPF-ContextMenu-Strikes-Again-DataContext-Not-Upda -->
                    <ContextMenu DataContext="{Binding Path=PlacementTarget.DataContext.ContextMenuViewModel, RelativeSource={RelativeSource Self}}">
                        <MenuItem Header="Open"
                                  Command="{Binding Path=OpenCommand}"/>
                        <MenuItem Header="Open Containing Folder"
                                  Command="{Binding Path=OpenFolderCommand}"/>
                        <Separator/>
                        <MenuItem Header="Copy New File Name"
                                  Command="{Binding Path=CopyCommand}"
                                  CommandParameter="NewFileName"/>
                        <MenuItem Header="Copy Original File Name"
                                  Command="{Binding Path=CopyCommand}"
                                  CommandParameter="OriginalFileName"/>
                        <MenuItem Header="Copy New Full Path"
                                  Command="{Binding Path=CopyCommand}"
                                  CommandParameter="NewFilePath"/>
                        <MenuItem Header="Copy Original Full Path"
                                  Command="{Binding Path=CopyCommand}"
                                  CommandParameter="OriginalFilePath"/>
                        <MenuItem Header="Paste"
                                  Command="{Binding Path=PasteCommand}"/>
                        <Separator/>
                        <MenuItem Header="Revert Selected"
                                  Command="{Binding Path=RevertSelectedCommand}"/>
                        <MenuItem Header="Remove Selected"
                                  Command="{Binding Path=RemoveSelectedCommand}"/>
                        <Separator/>
                        <MenuItem Header="Select All"
                                  Command="{Binding Path=SelectAllCommand}"/>
                        <MenuItem Header="Deselect All"
                                  Command="{Binding Path=DeselectAllCommand}"/>
                    </ContextMenu>
                </ListView.ContextMenu>
                <ListView.InputBindings>
                    <KeyBinding Gesture="Ctrl+C"
                                Command="{Binding Path=ContextMenuViewModel.CopyCommand}"
                                CommandParameter="NewFileName"/>
                    <KeyBinding Gesture="Ctrl+V" Command="{Binding Path=ContextMenuViewModel.PasteCommand}"/>
                    <KeyBinding Gesture="Ctrl+A" Command="{Binding Path=ContextMenuViewModel.SelectAllCommand}"/>
                    <KeyBinding Gesture="Delete" Command="{Binding Path=ContextMenuViewModel.RemoveSelectedCommand}"/>
                </ListView.InputBindings>
            </ListView>
            <Expander Grid.Column="1" ExpandDirection="Right">
                <Expander.Style>
                    <Style TargetType="Expander">
                        <Setter Property="Header">
                            <Setter.Value>
                                <!-- Header content need to be in Style, or Trigger cannot be activated -->
                                <TextBlock Text="Rename Steps">
                                    <TextBlock.LayoutTransform>
                                        <RotateTransform Angle="90"/>
                                    </TextBlock.LayoutTransform>
                                </TextBlock>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Expander.Style>

                <ListBox/>
            </Expander>
        </Grid>

        <StatusBar Grid.Row="2" Style="{StaticResource ModernStatusBarStyle}">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>

            <Separator Grid.Column="0"/>
            <StatusBarItem Grid.Column="1">
                <TextBlock Text="{Binding Path=Status}"/>
            </StatusBarItem>
            <Separator Grid.Column="2">
                <Separator.Style>
                    <Style TargetType="Separator">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Separator.Style>
            </Separator>
            <StatusBarItem Grid.Column="3">
                <StatusBarItem.Style>
                    <Style TargetType="StatusBarItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StatusBarItem.Style>

                <TextBlock>
                    <TextBlock Text="{Binding Path=Files.Count}"/> file(s), <TextBlock Text="{Binding Path=SelectedFiles.Count}"/> selected
                </TextBlock>
            </StatusBarItem>
            <Separator Grid.Column="4"/>
        </StatusBar>
    </Grid>
</Window>
<Window x:Class="BatchRenamer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BatchRenamer"
        xmlns:pattern="clr-namespace:BatchRenamer.Patterns"
        xmlns:xdwpf="clr-namespace:Xlfdll.Windows.Presentation"
        mc:Ignorable="d"
        Title="Batch Renamer"
        Width="1280" Height="720" MinWidth="360" MinHeight="240" WindowStartupLocation="CenterScreen"
        AllowDrop="True" PreviewDragOver="MainWindow_PreviewDragOver" Drop="MainWindow_Drop"
        Loaded="MainWindow_Loaded" Closing="MainWindow_Closing">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.Resources>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Resources>
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <ToolBar Grid.Row="0" ToolBarTray.IsLocked="True" Style="{StaticResource ModernToolBarStyle}">
                <Separator/>
                <Button Command="{x:Static local:BatchCommands.AddFileCommand}">
                    <StackPanel>
                        <Image Source="{StaticResource AddFileIcon}"/>
                        <AccessText Text="Add _Files"/>
                    </StackPanel>
                </Button>
                <Button Command="{x:Static local:BatchCommands.AddFolderCommand}">
                    <StackPanel>
                        <Image Source="{StaticResource AddFolderIcon}"/>
                        <AccessText Text="Add Fol_der"/>
                    </StackPanel>
                </Button>
                <Separator/>
                <Button ContextMenuService.IsEnabled="False" Click="ApplyPatternButton_Click">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Files.Count}" Value="0">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Button.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="_Find and Replace..."
                                      Command="{x:Static local:PatternCommands.OpenPatternCommand}"
                                      CommandParameter="FindAndReplace">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource FindAndReplaceIcon}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="_Insert Text..."
                                      Command="{x:Static local:PatternCommands.OpenPatternCommand}"
                                      CommandParameter="InsertText">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource TextInsertIcon}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="_Numberize..."
                                      Command="{x:Static local:PatternCommands.OpenPatternCommand}"
                                      CommandParameter="Numberize">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource NumberIcon}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="_Web Match..."
                                      Command="{x:Static local:PatternCommands.OpenPatternCommand}"
                                      CommandParameter="WebMatch">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource WebMatchIcon}"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </Button.ContextMenu>

                    <StackPanel>
                        <Image Source="{StaticResource ApplyPatternIcon}"/>
                        <AccessText Text="Apply _Pattern >"/>
                    </StackPanel>
                </Button>
                <Button Command="{x:Static local:BatchCommands.BatchRenameCommand}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Files.Count}" Value="0">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>

                    <StackPanel>
                        <Image Source="{StaticResource BatchRenameIcon}"/>
                        <AccessText Text="Batch _Rename"/>
                    </StackPanel>
                </Button>
                <Separator/>
                <Button Command="{x:Static local:GeneralCommands.AboutCommand}">
                    <StackPanel>
                        <Image Source="{StaticResource AboutIcon}"/>
                        <AccessText Text="_About"/>
                    </StackPanel>
                </Button>
                <Separator/>
            </ToolBar>

            <ListView x:Name="BatchFileListView" Grid.Row="1" ItemsSource="{Binding}"
                      SelectionChanged="BatchFileListView_SelectionChanged"
                      SizeChanged="BatchFileListView_SizeChanged"
                      KeyDown="BatchFileListView_KeyDown"
                      GridViewColumnHeader.Click="BatchFileListViewColumnHeader_Click">
                <ListView.GroupStyle>
                    <GroupStyle HidesIfEmpty="True">
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="GroupItem">
                                <Setter Property="Template" Value="{StaticResource ListViewGroupItemExpanderControlTemplate}"/>
                            </Style>
                        </GroupStyle.ContainerStyle>
                    </GroupStyle>
                </ListView.GroupStyle>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsModified}" Value="True">
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="Background" Value="Red"/>
                            </DataTrigger>
                        </Style.Triggers>

                        <Setter Property="IsSelected" Value="{Binding Path=IsSelected}"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>

                        <Setter Property="xdwpf:DoubleClickBehavior.Command" Value="{x:Static local:ViewCommands.OpenCommand}"/>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="New File Name">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox x:Name="NewFileNameTextBox"
                                             Text="{Binding Path=NewFileName, UpdateSourceTrigger=PropertyChanged}"
                                             GotFocus="NewFileNameTextBox_GotFocus"
                                             PreviewKeyDown="NewFileNameTextBox_PreviewKeyDown"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Original File Name" DisplayMemberBinding="{Binding Path=OriginalFileName}"/>
                        <GridViewColumn Header="Extension" DisplayMemberBinding="{Binding Path=Extension}"/>
                        <GridViewColumn Header="Size" DisplayMemberBinding="{Binding Path=Size, Converter={local:FileSizeValueConverter}}"/>
                    </GridView>
                </ListView.View>
                <ListView.DataContext>
                    <!-- CollectionViewSource needs to be in DataContext and bound to ItemsSource by {Binding} -->
                    <CollectionViewSource Source="{Binding Path=Files}">
                        <CollectionViewSource.GroupDescriptions>
                            <PropertyGroupDescription PropertyName="Directory"/>
                        </CollectionViewSource.GroupDescriptions>
                    </CollectionViewSource>
                </ListView.DataContext>
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Open"
                                  Command="{x:Static local:ViewCommands.OpenCommand}"/>
                        <MenuItem Header="Open Containing Folder"
                                  Command="{x:Static local:ViewCommands.OpenFolderCommand}"/>
                        <Separator/>
                        <MenuItem Header="Copy New File Name"
                                  Command="{x:Static local:ViewCommands.CopyCommand}"
                                  CommandParameter="NewFileName"/>
                        <MenuItem Header="Copy Original File Name"
                                  Command="{x:Static local:ViewCommands.CopyCommand}"
                                  CommandParameter="OriginalFileName"/>
                        <MenuItem Header="Copy New Full Path"
                                  Command="{x:Static local:ViewCommands.CopyCommand}"
                                  CommandParameter="NewFullPath"/>
                        <MenuItem Header="Copy Original Full Path"
                                  Command="{x:Static local:ViewCommands.CopyCommand}"
                                  CommandParameter="OriginalFullPath"/>
                        <MenuItem Header="Paste"
                                  Command="{x:Static local:ViewCommands.PasteCommand}"/>
                        <Separator/>
                        <MenuItem Header="Revert Selected"
                                  Command="{x:Static local:ViewCommands.RevertSelectedCommand}"/>
                        <MenuItem Header="Remove Selected"
                                  Command="{x:Static local:ViewCommands.RemoveSelectedCommand}"/>
                        <Separator/>
                        <MenuItem Header="Select All"
                                  Command="{x:Static local:ViewCommands.SelectAllCommand}"/>
                        <MenuItem Header="Deselect All"
                                  Command="{x:Static local:ViewCommands.DeselectAllCommand}"/>
                    </ContextMenu>
                </ListView.ContextMenu>
                <ListView.InputBindings>
                    <KeyBinding Gesture="Ctrl+C"
                                Command="{x:Static local:ViewCommands.CopyCommand}"
                                CommandParameter="NewFileName"/>
                    <KeyBinding Gesture="Ctrl+V" Command="{x:Static local:ViewCommands.PasteCommand}"/>
                    <KeyBinding Gesture="Ctrl+A" Command="{x:Static local:ViewCommands.SelectAllCommand}"/>
                    <KeyBinding Gesture="Delete" Command="{x:Static local:ViewCommands.RemoveSelectedCommand}"/>
                </ListView.InputBindings>
            </ListView>
        </Grid>

        <StatusBar Grid.Row="1" Style="{StaticResource ModernStatusBarStyle}">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>

            <Separator Grid.Column="0"/>
            <StatusBarItem Grid.Column="1">
                <TextBlock Text="{Binding Path=Status}"/>
            </StatusBarItem>
            <Separator Grid.Column="2">
                <Separator.Style>
                    <Style TargetType="Separator">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Separator.Style>
            </Separator>
            <StatusBarItem Grid.Column="3">
                <StatusBarItem.Style>
                    <Style TargetType="StatusBarItem">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StatusBarItem.Style>

                <TextBlock>
                    <TextBlock Text="{Binding Path=Files.Count}"/> file(s), <TextBlock Text="{Binding Path=SelectedFiles.Count}"/> selected
                </TextBlock>
            </StatusBarItem>
            <Separator Grid.Column="4"/>
        </StatusBar>
    </Grid>
</Window>